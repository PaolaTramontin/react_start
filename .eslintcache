[{"/Users/paolatramontin/Desktop/GA/react_start/src/index.js":"1","/Users/paolatramontin/Desktop/GA/react_start/src/App.js":"2","/Users/paolatramontin/Desktop/GA/react_start/src/components/Loan.js":"3","/Users/paolatramontin/Desktop/GA/react_start/src/components/PaymentInfo.js":"4"},{"size":224,"mtime":1612311218511,"results":"5","hashOfConfig":"6"},{"size":381,"mtime":1612408907397,"results":"7","hashOfConfig":"6"},{"size":5834,"mtime":1612409581535,"results":"8","hashOfConfig":"6"},{"size":413,"mtime":1612398521793,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"13ke6fn",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"/Users/paolatramontin/Desktop/GA/react_start/src/index.js",[],["22","23"],"/Users/paolatramontin/Desktop/GA/react_start/src/App.js",["24"],"import \"./css/App.css\";\nimport React  from 'react';\nimport Loan from './components/Loan'\n\n\n\nfunction App() {\n\n\n\n\n  return (\n      <div id=\"parentDiv\">\n            <header> Fig Tech \n      <img id=\"fig\" src='https://i.postimg.cc/TwjH2CVc/static1-squarespace.png'/>\n    </header>\n          <h1 id=\"loan\"> Loan Calculator</h1>\n        <Loan/>\n      </div>\n  );\n}\n\nexport default App;\n","/Users/paolatramontin/Desktop/GA/react_start/src/components/Loan.js",["25","26"],"import React, { useState } from \"react\";\n// import { useForm } from \"react-hook-form\";\nimport PaymentInfo from './PaymentInfo'\nimport Chart from \"react-google-charts\";\n\n\n\n\n\nexport function Loan() {\n    \n\n//initializing the default states using Hooks.\n\nconst [loanAmount, setLoanAmount] = useState(5000)\n\nconst [loanTerm, setLoanTerm] = useState(5)\n\nconst [loanTermMonths, setLoanTermMonths] = useState(60)\n\nconst [interest, setInterest] = useState(4.5)\n\nconst [roundedTerm, setRoundedTerm] = useState(5)\n\nconst [payment, setPayment] = useState(93.22)\n\nconst [totalInterest, setTotalInterest] = useState(524.96)\n\n\n//this function will grab the user input and set the new state for the fields.\n//if the input has been filled, the if statement will run and set the new state for the input value\n    const handleInput = (event) =>{\n        if(event.target.name === 'loanAmount'){\n            setLoanAmount(event.target.value)\n        }\n        if(event.target.name === 'loanTerm'){\n            let amount = event.target.value\n            setLoanTerm(event.target.value)\n            // let num = 10\n            // console.log(num.toFixed(2))\n            // console.log(\"amount\", amount)\n            setRoundedTerm (amount)\n            // console.log(\"this loan term\", loanTerm)\n            let monthly = event.target.value * 12 \n            setLoanTermMonths(monthly)\n            \n        }\n\n        if(event.target.name === 'loanTermMonths'){\n            setLoanTermMonths(event.target.value)\n            console.log(\"this loan term months\", loanTermMonths)\n            let annual = event.target.value / 12 \n            setLoanTerm(annual)\n            // if(annual % 12 !=0){\n            //     annual= annual.toFixed(2)\n            //     console.log(\"decimal\")\n            // } \n            console.log('annual', annual)\n            setRoundedTerm (annual.toFixed(2))\n        }\n\n        if(event.target.name === 'interest'){\n            setInterest(event.target.value)\n        }\n    \n    }\n\n    console.log(\"errthang\", loanAmount, loanTerm, loanTermMonths, interest)\n\n    const handleSubmit = (event) =>{\n        event.preventDefault()\n        console.log(event.target)\n        calculate()\n        calTotalInt()\n    }\n\n\n\n  \n// emi (monthly payments) calculation = p*(r(1+r)^n) / (((1+r)^n) -1) \n\n//                      KEY:\n// p = loan amount\n//r= interest rate per month, which is yearly rate / 12 (months) * 100 (because we are dealing with decimals)\n// n = number of monthly installments aka loan term \n\n\n    const calculate = () =>{\n        let p = loanAmount \n        let r = interest / (12 * 100)\n        let n = loanTermMonths\n        let half = Math.pow((1+r),n)\n        let emi = (p*(r*half)) / (half-1)\n        let roundedEmi = emi.toFixed(2)\n        setPayment(roundedEmi)\n        console.log(\"this is emi\", setPayment)\n    }\n\n\n    const calTotalInt = () =>{\n        let realTotal = payment * loanTermMonths\n        let totalInt =  realTotal - loanAmount\n        console.log(\"this total int\", totalInt)\n        setTotalInterest(totalInt.toFixed(2))\n    }\n\n\n  return (\n      <div id=\"outsideDiv\"> \n      \n      <div id=\"container\"> \n          <h2 id=\"details\"> Enter Your Details </h2>\n        <form onSubmit={(event)=>handleSubmit(event)}>\n\n\n            <label htmlFor=\"name\">Loan Amount </label>\n                <br/>\n            <input type=\"text\" id=\"loanAmount\" name=\"loanAmount\" value={loanAmount} onChange={handleInput}/> \n                <br/> \n            <label htmlFor=\"name\">Loan term (years)</label>\n                <br/>\n            <input type=\"text\" id=\"loanTerm\" name=\"loanTerm\" value={roundedTerm}  onChange={handleInput}/>\n                <br/>\n            <label htmlFor=\"name\">Loan Term in Months </label>\n                <br/>\n            <input type=\"text\" id=\"loanTermMonths\" name=\"loanTermMonths\" value={loanTermMonths}  onChange={handleInput}/> \n                <br/>\n            <label htmlFor=\"name\"> Interest rate per year(%)</label>\n                <br/>\n            <input type=\"text\" id=\"interest\" name=\"interest\"  value={interest}  onChange={handleInput} /> \n                <br/>\n            <button id=\"button-2\" className=\"grow_spin\"type=\"submit\"> Click to Calculate </button>\n                <br/>\n            {/* <h3 id=\"Payment\"> {payment} Dollars per Month</h3>    */}\n        </form>\n    </div>\n        <PaymentInfo payment={payment} loanAmount={loanAmount} interest={interest} totalInterest={totalInterest} />\n        <div id=\"chart\">\n            <Chart\n                width={'500px'}\n                height={'300px'}\n                chartType=\"PieChart\"\n                loader={<div>Loading Chart</div>}\n                data={[\n                    ['Task', 'Hours per Day'],\n                    // ['Payment', payment],\n                    ['Interest', (interest/(12*100))*loanAmount],\n                    ['Principal', payment- (interest/(12*100))*loanAmount],\n                    // ['Principarl',1 ],\n                    // ['Sleep', 10],\n                ]}\n                options={{\n                    title: 'Loan Breakdown: Monthly Payment: $'+`${payment}`,\n                    // Just add this option\n                    is3D: true,\n                    colors: ['#e3a38d', '#59c29b', '#ec8f6e', '#f3b49f', '#f6c7b6'],\n                    backgroundColor: 'transparent'\n                }}\n                rootProps={{ 'data-testid': '2' }}\n            />\n        </div>\n        <footer>    \n      <div id=\"footerDiv\"> \n        <a href=\"https://github.com/PaolaTramontin/react_start\"> \n          <img id=\"github\" src=\"https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/278/datas/original.gif\" width='40px'/>\n          <span id=\"gh\">GitHub   </span>\n       </a>\n      </div>\n\n  \n  </footer>\n    </div>\n  );\n}\n\n\nexport default Loan","/Users/paolatramontin/Desktop/GA/react_start/src/components/PaymentInfo.js",["27"],"import React from 'react'\nimport Loan from './Loan'\n\nconst PaymentInfo = (props) => {\n\n\n  return (\n    <div id=\"test\">\n      <div id=\"paymentText\"> \n        <h1> Monthly Payments:</h1>\n        <h2 id=\"total\"> ${props.payment}</h2>\n        <h2> Total Principal Paid: ${props.loanAmount} </h2>\n       <h2> Total Interest Paid: $ {props.totalInterest} </h2>\n      </div>\n    </div>\n  )\n}\n\nexport default PaymentInfo\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":15,"column":7,"nodeType":"34","endLine":15,"endColumn":82},{"ruleId":"35","severity":1,"message":"36","line":153,"column":64,"nodeType":"37","messageId":"38","endLine":153,"endColumn":65},{"ruleId":"32","severity":1,"message":"33","line":165,"column":11,"nodeType":"34","endLine":165,"endColumn":167},{"ruleId":"39","severity":1,"message":"40","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":12},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'Loan' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]